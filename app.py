# -*- coding: utf-8 -*-
"""app.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pPbxylj233p_KCp0b8wXPNG5yDEg2keg
"""

import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import altair as alt
import numpy as np
import plotly.express as px
from sklearn.linear_model import LinearRegression
from sklearn.cluster import KMeans

df = pd.read_csv('streamlit_dataset.csv')

st.set_page_config(
    page_title="–ï–∫–æ–Ω–æ–º—ñ—á–Ω–∏–π –¥–∞—à–±–æ—Ä–¥",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded",
    menu_items={
        'Get Help': 'https://docs.streamlit.io/',
        'Report a bug': 'https://github.com/streamlit/streamlit/issues',
        'About': '–Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞ –ø–∞–Ω–µ–ª—å –¥–ª—è –µ–∫–æ–Ω–æ–º—ñ—á–Ω–æ–≥–æ –∞–Ω–∞–ª—ñ–∑—É –ø—ñ–¥–ø—Ä–∏—î–º—Å—Ç–≤'
    }
)

# --- –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è —Ñ—ñ–ª—å—Ç—Ä—ñ–≤ —É session_state ---
default_year = sorted(df["Year"].unique())[0]
default_regions = list(df["Region"].unique())
default_industries = list(df["Industry"].unique())
default_scenario = df["Scenario"].unique()[0]
default_max_budget = int(df["AdBudget"].max())

if "year" not in st.session_state:
    st.session_state.year = default_year
if "regions" not in st.session_state:
    st.session_state.regions = default_regions
if "industries" not in st.session_state:
    st.session_state.industries = default_industries
if "scenario" not in st.session_state:
    st.session_state.scenario = default_scenario
if "max_adbudget" not in st.session_state:
    st.session_state.max_adbudget = default_max_budget

# –£–≤—ñ–º–∫–Ω—É—Ç–∏ —Ç–µ–º–Ω—É —Ç–µ–º—É
alt.themes.enable("dark")

# –ë—ñ—á–Ω–∞ –ø–∞–Ω–µ–ª—å / SIDEBAR
st.sidebar.title("–ü–∞–Ω–µ–ª—å —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó")

# –ö–Ω–æ–ø–∫–∞ —Å–∫–∏–¥–∞–Ω–Ω—è
if st.sidebar.button("–°–∫–∏–Ω—É—Ç–∏ —Ñ—ñ–ª—å—Ç—Ä–∏"):
    st.session_state.year = default_year
    st.session_state.regions = default_regions
    st.session_state.industries = default_industries
    st.session_state.scenario = default_scenario
    st.session_state.max_adbudget = default_max_budget
    st.experimental_rerun()


# –§—ñ–ª—å—Ç—Ä–∏ –∑ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è–º session_state
st.session_state.year = st.sidebar.selectbox("–û–±–µ—Ä—ñ—Ç—å —Ä—ñ–∫", sorted(df["Year"].unique()), index=sorted(df["Year"].unique()).index(st.session_state.year))
st.session_state.regions = st.sidebar.multiselect("–û–±–µ—Ä—ñ—Ç—å —Ä–µ–≥—ñ–æ–Ω–∏", df["Region"].unique(), default=st.session_state.regions)
st.session_state.industries = st.sidebar.multiselect("–û–±–µ—Ä—ñ—Ç—å –≥–∞–ª—É–∑—ñ", df["Industry"].unique(), default=st.session_state.industries)
st.session_state.scenario = st.sidebar.radio("–°—Ü–µ–Ω–∞—Ä—ñ–π", df["Scenario"].unique(), index=list(df["Scenario"].unique()).index(st.session_state.scenario))

st.session_state.max_adbudget = st.sidebar.slider(
    "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∏–π —Ä–µ–∫–ª–∞–º–Ω–∏–π –±—é–¥–∂–µ—Ç",
    min_value=int(df["AdBudget"].min()),
    max_value=int(df["AdBudget"].max()),
    value=st.session_state.max_adbudget,
    step=1000
)
# –ß–µ–∫–±–æ–∫—Å–∏ –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
show_map = st.sidebar.checkbox("–ü–æ–∫–∞–∑–∞—Ç–∏ –∫–∞—Ä—Ç—É –∫–æ–º–ø–∞–Ω—ñ–π")
show_scatter = st.sidebar.checkbox("–ü–æ–∫–∞–∑–∞—Ç–∏ –≥—Ä–∞—Ñ—ñ–∫ ROI vs Investment")

# –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∏–π –±–ª–æ–∫
st.sidebar.markdown("---")
st.sidebar.markdown(" **–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è**: \n–§—ñ–ª—å—Ç—Ä—É–π—Ç–µ –¥–∞–Ω—ñ –∑–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —ñ –ø–µ—Ä–µ–≥–ª—è–¥–∞–π—Ç–µ –≥—Ä–∞—Ñ—ñ–∫–∏ —Ç–∞ —Ç–∞–±–ª–∏—Ü—ñ –Ω–∞ –ø–∞–Ω–µ–ª—ñ –ø—Ä–∞–≤–æ—Ä—É—á.")
st.sidebar.markdown(" **–ê–≤—Ç–æ—Ä**: Lazar_Iryna")

# ---------------------------------
# –§—ñ–ª—å—Ç—Ä–∞—Ü—ñ—è
# ---------------------------------
df_filtered = df[
    (df["Year"] == st.session_state.year) &
    (df["Region"].isin(st.session_state.regions)) &
    (df["Industry"].isin(st.session_state.industries)) &
    (df["Scenario"] == st.session_state.scenario) &
    (df["AdBudget"] <= st.session_state.max_adbudget)
]


# ---------------------------------
# üßæ –û—Å–Ω–æ–≤–Ω–∞ –ø–∞–Ω–µ–ª—å
# ---------------------------------

st.title("üìä –ï–∫–æ–Ω–æ–º—ñ—á–Ω–∏–π –¥–∞—à–±–æ—Ä–¥ –∫–æ–º–ø–∞–Ω—ñ–π")
st.subheader(f"üîç –í—ñ–¥—Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω–æ {df_filtered.shape[0]} –∫–æ–º–ø–∞–Ω—ñ–π")

# –ö–Ω–æ–ø–∫–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è CSV
csv = df_filtered.to_csv(index=False).encode("utf-8")
st.download_button(
    label="‚¨áÔ∏è –ó–∞–≤–∞–Ω—Ç–∞–∂–∏—Ç–∏ CSV",
    data=csv,
    file_name="filtered_companies.csv",
    mime="text/csv"
)

# –¢–∞–±–ª–∏—Ü—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
st.dataframe(df_filtered)

# –ö–∞—Ä—Ç–∞ –∫–æ–º–ø–∞–Ω—ñ–π
if show_map:
    st.subheader("üó∫ –ì–µ–æ–≥—Ä–∞—Ñ—ñ—è –∫–æ–º–ø–∞–Ω—ñ–π")
    st.map(df_filtered[['Latitude', 'Longitude']])

# Scatter-–≥—Ä–∞—Ñ—ñ–∫ ROI ~ Investment
if show_scatter:
    st.subheader("üìâ ROI ~ Investment (Altair)")
    chart = alt.Chart(df_filtered).mark_circle(size=60).encode(
        x='Investment:Q',
        y='ROI:Q',
        color='Industry:N',
        tooltip=['Company', 'Investment', 'ROI']
    ).interactive().properties(
        width=700, height=400
    )
    st.altair_chart(chart, use_container_width=True)
